---
- include: add-sonar-user.yml

- name: Create a database for Sonar.
  mysql_db:
    name: "{{ sonar_mysql_database }}"
    state: present

- name: Create a sonar user.
  mysql_user:
    name: "{{ sonar_mysql_username }}"
    host: "{{ item }}"
    priv: "{{ sonar_mysql_database }}.*:ALL"
    password: "{{ sonar_mysql_password }}"
  with_items: "{{ sonar_mysql_allowed_hosts }}"


  #- name: Download Sonar.
  # get_url:
  # url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.2.46101.zip
  # dest: /root/sonarqube-8.9.2.46101.zip
  # validate_certs: yes


- name: Unzip Sonar.
  unarchive:
    src: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    dest: /opt/
    copy: no
    creates: "/opt/{{ sonar_version_directory }}/COPYING"
    owner: "{{ sonar_service_user }}"
    group: "{{ sonar_service_group }}"

- name: Create sonar symlink
  file:
    src: "/opt/{{ sonar_version_directory }}"
    dest: "{{ sonar_install_directory }}"
    owner: "{{ sonar_service_user }}"
    group: "{{ sonar_service_group }}"
    state: link

- include: configure.yml

- name: Update sonar shell scrit
  lineinfile:
    path: "{{ sonar_install_directory }}/bin/linux-x86-64/sonar.sh"
    regexp: '^#RUN_AS_USER='
    line: 'RUN_AS_USER={{ sonar_service_user }}'

- name: Symlink sonar bin.
  file:
    src: "{{ sonar_install_directory }}/bin/linux-x86-64/sonar.sh"
    dest: /usr/bin/sonar
    state: link
  register: sonar_symlink

- name: Add sonar as init script for service management.
  file:
    src: "{{ sonar_install_directory }}/bin/linux-x86-64/sonar.sh"
    dest: /etc/init.d/sonar
    state: link
  when: "ansible_service_mgr != 'systemd'"

- name: Copy SonarQube systemd unit file into place (for systemd systems).
  template:
    src: sonar.unit.j2
    dest: /etc/systemd/system/sonar.service
    owner: "{{ sonar_service_user }}"
    group: "{{ sonar_service_group }}"
    mode: 0755
  when: "ansible_service_mgr == 'systemd'"

- name: Ensure Sonar is running and set to start on boot.
  service: name=sonar state=started enabled=yes

- name: Allow Sonar time to build on first start.
  pause: seconds=180
  when: sonar_symlink.changed

- name: Make sure Sonar is responding on the configured port.
  wait_for: port=9000 delay=3 timeout=300
